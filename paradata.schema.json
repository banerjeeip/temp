{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "CompleteFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "complete"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "ts"
            ],
            "title": "CompleteFormCommand",
            "type": "object"
        },
        "CreateModelFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "create"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "key": {
                    "title": "key",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                },
                "value": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Model"
                        },
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Model"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FileInfo"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        }
                    ],
                    "title": "value"
                }
            },
            "required": [
                "command",
                "key",
                "source",
                "stream",
                "ts",
                "value"
            ],
            "title": "CreateModelFormCommand",
            "type": "object"
        },
        "DeleteModelFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "delete"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "key": {
                    "title": "key",
                    "type": "string"
                },
                "priorValue": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Model"
                        },
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Model"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FileInfo"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        }
                    ],
                    "title": "priorValue"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "key",
                "priorValue",
                "source",
                "stream",
                "ts"
            ],
            "title": "DeleteModelFormCommand",
            "type": "object"
        },
        "ExitFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "exit"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "ts"
            ],
            "title": "ExitFormCommand",
            "type": "object"
        },
        "FileInfo": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "size": {
                    "title": "size",
                    "type": "number"
                },
                "type": {
                    "title": "type",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "size",
                "type"
            ],
            "title": "FileInfo",
            "type": "object"
        },
        "HookCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "hook"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "target": {
                    "title": "target",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                },
                "value": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Model"
                        },
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Model"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FileInfo"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        }
                    ],
                    "title": "value"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "target",
                "ts",
                "value"
            ],
            "title": "HookCommand",
            "type": "object"
        },
        "Model": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/Model"
                    },
                    {
                        "items": {
                            "$ref": "#/definitions/Model"
                        },
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        },
                        "type": "array"
                    },
                    {
                        "type": [
                            "string",
                            "number",
                            "boolean"
                        ]
                    }
                ]
            },
            "title": "Model",
            "type": "object"
        },
        "NavigateGotoFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "goto"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "screen": {
                    "title": "screen",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "screen",
                "source",
                "stream",
                "ts"
            ],
            "title": "NavigateGotoFormCommand",
            "type": "object"
        },
        "NavigateNextFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "next"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "ts"
            ],
            "title": "NavigateNextFormCommand",
            "type": "object"
        },
        "NavigatePreviousFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "previous"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "ts"
            ],
            "title": "NavigatePreviousFormCommand",
            "type": "object"
        },
        "SetLanguageCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "setLanguage"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                },
                "value": {
                    "title": "value",
                    "type": "string"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "ts",
                "value"
            ],
            "title": "SetLanguageCommand",
            "type": "object"
        },
        "StartBranchingFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "startBranching"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "ts"
            ],
            "title": "StartBranchingFormCommand",
            "type": "object"
        },
        "Text": {
            "additionalProperties": false,
            "description": "Generic object type to provide i18n content for screens, containers and controls.",
            "examples": [
                {
                    "en": "This is a text string",
                    "es": "Esta es una cadena de texto",
                    "type": "Text"
                }
            ],
            "properties": {
                "am": {
                    "description": "Amharic language content",
                    "title": "am",
                    "type": "string"
                },
                "ar": {
                    "description": "Arabic language content",
                    "title": "ar",
                    "type": "string"
                },
                "bn": {
                    "description": "Bengali language content",
                    "title": "bn",
                    "type": "string"
                },
                "de": {
                    "description": "German language content",
                    "title": "de",
                    "type": "string"
                },
                "en": {
                    "description": "English language content",
                    "title": "en",
                    "type": "string"
                },
                "es": {
                    "description": "Spanish language content",
                    "title": "es",
                    "type": "string"
                },
                "fa": {
                    "description": "Farsi language content",
                    "title": "fa",
                    "type": "string"
                },
                "fr": {
                    "description": "French language content",
                    "title": "fr",
                    "type": "string"
                },
                "gu": {
                    "description": "Gujarati language content",
                    "title": "gu",
                    "type": "string"
                },
                "hi": {
                    "description": "Hindi language content",
                    "title": "hi",
                    "type": "string"
                },
                "ht": {
                    "description": "Haitian Creole language content",
                    "title": "ht",
                    "type": "string"
                },
                "hy": {
                    "description": "Armenian language content",
                    "title": "hy",
                    "type": "string"
                },
                "it": {
                    "description": "Italian language content",
                    "title": "it",
                    "type": "string"
                },
                "ja": {
                    "description": "Japanese language content",
                    "title": "ja",
                    "type": "string"
                },
                "ko": {
                    "description": "Korean language content",
                    "title": "ko",
                    "type": "string"
                },
                "ne": {
                    "description": "Nepali language content",
                    "title": "ne",
                    "type": "string"
                },
                "pl": {
                    "description": "Polish language content",
                    "title": "pl",
                    "type": "string"
                },
                "pt": {
                    "description": "Portuguese language content",
                    "title": "pt",
                    "type": "string"
                },
                "ru": {
                    "description": "Russian language content",
                    "title": "ru",
                    "type": "string"
                },
                "so": {
                    "description": "Somali language content",
                    "title": "so",
                    "type": "string"
                },
                "tl": {
                    "description": "Tagalog language content",
                    "title": "tl",
                    "type": "string"
                },
                "type": {
                    "description": "This is a constant string, which identifies the object's type, independent of its placement in the cfom tree. The purpose\nof types is to provide a way in which an entity can be wholly understood and intelligible outside of the context in which it exists\nin the CFOM hierarchy. Type will become even more important for easily reusing entities in a generic way and for creating snippets.",
                    "enum": [
                        "Text"
                    ],
                    "title": "type",
                    "type": "string"
                },
                "ur": {
                    "description": "Urdu language content",
                    "title": "ur",
                    "type": "string"
                },
                "vi": {
                    "description": "Vietnamese language content",
                    "title": "vi",
                    "type": "string"
                },
                "zh-Hans": {
                    "description": "Chinese (Simplified) language content",
                    "title": "zh-Hans",
                    "type": "string"
                },
                "zh-Hant": {
                    "description": "Chinese (Traditional) language content",
                    "title": "zh-Hant",
                    "type": "string"
                }
            },
            "required": [
                "en",
                "type"
            ],
            "title": "Text",
            "type": "object"
        },
        "UpdateModelFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "update"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "key": {
                    "title": "key",
                    "type": "string"
                },
                "priorValue": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Model"
                        },
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Model"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FileInfo"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        }
                    ],
                    "title": "priorValue"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                },
                "value": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Model"
                        },
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number",
                                    "boolean"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Model"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FileInfo"
                        },
                        {
                            "type": [
                                "string",
                                "number",
                                "boolean"
                            ]
                        }
                    ],
                    "title": "value"
                }
            },
            "required": [
                "command",
                "key",
                "priorValue",
                "source",
                "stream",
                "ts",
                "value"
            ],
            "title": "UpdateModelFormCommand",
            "type": "object"
        },
        "UploadFileFormCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "enum": [
                        "upload"
                    ],
                    "title": "command",
                    "type": "string"
                },
                "key": {
                    "title": "key",
                    "type": "string"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "form"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "key",
                "source",
                "stream",
                "ts"
            ],
            "title": "UploadFileFormCommand",
            "type": "object"
        },
        "ViewCommand": {
            "additionalProperties": false,
            "properties": {
                "command": {
                    "$ref": "#/definitions/ViewCommands",
                    "title": "command"
                },
                "source": {
                    "description": "The ID of the Component which issued the Command",
                    "title": "source",
                    "type": "string"
                },
                "stream": {
                    "description": "This tells what stream the command belongs to, this is useful for keeping\nour stream domains dinstinct when they have been merged into a single stream",
                    "enum": [
                        "view"
                    ],
                    "title": "stream",
                    "type": "string"
                },
                "target": {
                    "title": "target",
                    "type": "string"
                },
                "text": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Text"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "text"
                },
                "triggered": {
                    "description": "This should be set when a command was created in the context of another command being processed.\nFor example: If I'm in the middle of processing a NEXT command and need to issue a GOTO command\ninside the callback, then I should set triggered=true. This will tell the replay engine to ignore\nmanually processing this command",
                    "title": "triggered",
                    "type": "boolean"
                },
                "ts": {
                    "description": "The time in milliseconds when the command was issued",
                    "title": "ts",
                    "type": "number"
                }
            },
            "required": [
                "command",
                "source",
                "stream",
                "target",
                "ts"
            ],
            "title": "ViewCommand",
            "type": "object"
        },
        "ViewCommands": {
            "enum": [
                "hideAlert",
                "hideHelp",
                "openLink",
                "showError",
                "showHelp",
                "showInfo",
                "showSuccess",
                "showWarning"
            ],
            "title": "ViewCommands",
            "type": "string"
        }
    },
    "items": {
        "anyOf": [
            {
                "$ref": "#/definitions/CreateModelFormCommand"
            },
            {
                "$ref": "#/definitions/UpdateModelFormCommand"
            },
            {
                "$ref": "#/definitions/DeleteModelFormCommand"
            },
            {
                "$ref": "#/definitions/UploadFileFormCommand"
            },
            {
                "$ref": "#/definitions/NavigateNextFormCommand"
            },
            {
                "$ref": "#/definitions/NavigatePreviousFormCommand"
            },
            {
                "$ref": "#/definitions/NavigateGotoFormCommand"
            },
            {
                "$ref": "#/definitions/StartBranchingFormCommand"
            },
            {
                "$ref": "#/definitions/CompleteFormCommand"
            },
            {
                "$ref": "#/definitions/ExitFormCommand"
            },
            {
                "$ref": "#/definitions/SetLanguageCommand"
            },
            {
                "$ref": "#/definitions/HookCommand"
            },
            {
                "$ref": "#/definitions/ViewCommand"
            }
        ]
    },
    "type": "array"
}
